name: Selenium IDE issue 1610
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
jobs:
  selenium-ide-1610:
    env:
      SELENIUM_IP: 172.17.0.2
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: create docker network
      run: |
        docker network create selenium
    - name: Start Selenium Chrome
      run: |
        docker run --net selenium -d -p 4444:4444 -p 7900:7900 --shm-size="2g" --name selenium selenium/standalone-chrome:4.8.3-20230404 &
    - name: wait until selenium is ready
      run: |
        # wait for selenium to be ready by checking the status endpoint in docker selenium network
        until docker run --net selenium --rm alpine wget -q --timeout=1 --spider http://selenium:4444/wd/hub/status;
        do
            printf '.';
        done
    - name: get ip of selenium container
      run: |
        # get the ip of the selenium container
        docker network  inspect -f '{{range .Containers}}{{.IPv4Address}}{{end}}'  selenium | awk -F/ '{print $1}'
        export SELENIUM_IP=$(docker network  inspect -f '{{range .Containers}}{{.IPv4Address}}{{end}}'  selenium | awk -F/ '{print $1}')
        echo "SELENIUM_IP=$(docker network  inspect -f '{{range .Containers}}{{.IPv4Address}}{{end}}'  selenium | awk -F/ '{print $1}')" >> $GITHUB_ENV
    - name: Run tests
      id: test
      continue-on-error: true
      run: |
        docker run --net selenium --rm -v $(pwd)/bug/select/html\ select.side:/tests/test.side ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/selenium-side-runner:latest selenium-side-runner --server http://${{ env.SELENIUM_IP }}:4444/wd/hub -c "goog:chromeOptions.args=[--headless,--nogpu] browserName=chrome" tests/test.side
    - name: Stop Selenium Chrome
      run: |
        # logs
        docker logs selenium
        docker stop selenium
        docker rm selenium
        docker network rm selenium
    - name: fail if tests failed
      if: ${{ steps.test.outcome == 'failure' }}
      run: |
        exit 1
